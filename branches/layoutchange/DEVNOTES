Fonty started in ~ 2006 (In Hermanus, South Africa. On an early Ubuntu.)

Work and notes in 2016/2017. Slow due to my ill health.
====
See also the older "ROADMAP" file.

FONTCONFIG and "~.fonts" deprecated
===================================
Info is vague, but it looks like ~/.local/share/fonts is the new place

https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
$XDG_DATA_HOME defines the base directory relative to which user specific data files should be stored. If $XDG_DATA_HOME is either not set or empty, a default equal to $HOME/.local/share should be used.

https://github.com/eosrei/emojione-color-font/issues/14

Also look in ~/.config/fontconfig

/etc/fonts/fonts.conf has:

        <!-- the following element will be removed in the future -->
        <dir>~/.fonts</dir>

In mailinglist:
https://lists.freedesktop.org/archives/fontconfig/2014-July/005270.html
"Use $XDG_DATA_HOME/fonts instead where is ~/.local/share/fonts in most cases."

Might be able to look for $XDG_DATA and deduce from that ...

Interesting fc-list command. Shows all the filenames of known fonts and then I grep it to limit to my home dir:
fc-list : file | grep donn

(I wonder if this could be a way to limit font cruft in choosers?)

XGD info
===
There's a movement to standard desktop ideas. One of the is to use a standard config, data and cache directory system.
Here's what I did in a python console:

python-gi
-- Seems to be the deb/rpm name of package to install.

python (2.7)
>>>import glib ## This is out of date. I think.
>>>glib.get_user_data_dir()
'/home/donn/.local/share'
So, that works. I am not sure where 'glib' comes from...
Also:
## It seems this is the latest way to  do it:
>>>from gi.repository import GLib
>>>GLib.get_user_data_dir()
'/home/donn/.local/share'
So, that works too. 

.fontypython should go in there somewhere - poss into the config dir:
>>> glib.get_user_config_dir()
'/home/donn/.config'
>>> GLib.get_user_config_dir()
'/home/donn/.config'

.fonts should go in DATA dir.


BRANCHES:
==
Sept 2nd 2017
I created the layoutchange branch. It's purpose is to mess with the wx layout of fonty.
I intend to get to the filter/pager stuff too, but will try to do that in its own branch, after this one is reintegrated into trunk.

BUGS
==
*ESC key not bubbling up, still. Perhaps bind it from the fontview panel too?



TODO
==
* I placed a slider for paging. It sucks. Remove it. Go back to the drop-down control or something else. Still the old idea for an HTML style pager control.
* NB::Don't forget to remove the wx debug stuff on the app object
* UPDATE CHANGELOG
* UPDATE README
* THE FUCKING MAN PAGE :(
* Update the WXLAYOUTNOTES diagram.


* Fix the fugly look of the help file.
* Make the "back to top" anchor actually at the top (help file)


* Detect when source directory is $HOME and recurse is on and ... ask if user is sure. Else crash-city.

* Maybe- background colour of the pog choosers target can differ from source? Maybe icons too?
* Do we need the wrapper and the segfonts stuff?
* Make the About page HTML!


* Perhaps - a small icon to show font types - TTF vs Type1 vs TTC etc.

* Fix % outside brackets _("") % out here, not inside.
   _("text {}").format(stuff)
* comments that are stale
* copyright dates replace
* pyc files in svn
* PEP8 all up in da hizzle - well, the tabs to spaces part.
* it's, its ...


* Help FP logo - same as in about
* Catch ESC kay in DismissablePanels so it closes them, not the app.
* Move the sub-folders checkbox into settings. Append dire warning.





Oct 2017: A new Segfault!
===
/home/donn/06.FontStore/fontsquirrel.com/grunge/AnuDaw/ANUDI___.ttf
MinimalCreateFitmaps runs
OrderedDict([(<fontypythonmodules.fontcontrol.TruetypeItem object at 0x7f3d556e20d0>, <fontypythonmodules.gui_Fitmap.Fitmap; proxy of <Swig Object of type 'wxPyControl *' at 0x29384b0> >)])
refresh: ANUDI___.ttf
self.fitem.name ticked: False
   Set cols 0
adding to sizer: ANUDI___.ttf (94, 1047)
Floating point exception (core dumped)

Can't reproduce... :(




FREETYPE SUPPORTED FONTS:
==
How many do I have to cover?

    OK TrueType fonts (TTF) and TrueType collections (TTC)
		OK OpenType collections (OTC) Is the same as TTC (seems to supercede TTF)
    OK OpenType fonts (OTF)
    OK Type 1 fonts (PFA and PFB)
    ADDED SEPT 2017: OK WOFF fonts

    NOT SUPP BY PIL X11 PCF fonts
    NOT SUPP BY PIL Windows FNT fonts

		NOT YET Opentype CFF variants and ..
    NOT YET CFF fonts [same] Not at all sure that these are a file type.


    NOT YET ?? CID-keyed Type 1 fonts
    NOT YET ?? SFNT-based bitmap fonts, including color Emoji
    NOT YET ?? BDF fonts (including anti-aliased ones)
    NOT YET ?? PFR fonts
    NOT YET ?? Type 42 fonts (limited support)


FUTURE IDEAS
============
* Turn the filter into a more google-like search bar. Have it search the fontInfo results: various fields, PANOSE numbers, Family, Style and Filename.
* Have a PANOSE/VISUAL-FONT WIZARD near the search bar somewhere. Find fonts by style-cues like bold, fantasy, serif etc.
* Have "font matching code" (Fontmatrix has it now!) for finding fonts close to a bitmap sample.
* DONE! A font inspector - open a dialogue showing all the glyphs at each character position. This has been asked for, but may not make it into Fonty soon.

* Distinguish TTC somehow




FILTER TODO
==
Filtering ideas. Pillow is supplying all kinds of info now:

A set of buttons by first letter of all fitems: A B D P etc.
>>> L=["Apple","Bug","Star","silly","Alt","Cow","Dark"]
>>> letters=set([i[0].upper() for i in L])

Then use any with ^ "^B" in the filter string.



Filter stuff
=============
fi.name, fi.family, fi.style:
AlegreyaSans-Medium.otf [u'Alegreya Sans'] ['Medium']
AlegreyaSans-Regular.otf [u'Alegreya Sans'] ['Regular']
AlegreyaSansSC-BlackItalic.otf [u'Alegreya Sans SC'] ['Black Italic']
AlegreyaSansSC-Black.otf [u'Alegreya Sans SC'] ['Black']
AlegreyaSansSC-BoldItalic.otf [u'Alegreya Sans SC'] ['Bold Italic']
AlegreyaSansSC-Bold.otf [u'Alegreya Sans SC'] ['Bold']
AlegreyaSansSC-ExtraBoldItalic.otf [u'Alegreya Sans SC'] ['ExtraBold Italic']
AlegreyaSansSC-ExtraBold.otf [u'Alegreya Sans SC'] ['ExtraBold']
AlegreyaSansSC-Italic.otf [u'Alegreya Sans SC'] ['Italic']
AlegreyaSansSC-LightItalic.otf [u'Alegreya Sans SC'] ['Light Italic']
AlegreyaSansSC-Light.otf [u'Alegreya Sans SC'] ['Light']
AlegreyaSansSC-MediumItalic.otf [u'Alegreya Sans SC'] ['Medium Italic']
AlegreyaSansSC-Medium.otf [u'Alegreya Sans SC'] ['Medium']
AlegreyaSansSC-Regular.otf [u'Alegreya Sans SC'] ['Regular']
AlegreyaSansSC-ThinItalic.otf [u'Alegreya Sans SC'] ['Thin Italic']
AlegreyaSansSC-Thin.otf [u'Alegreya Sans SC'] ['Thin']
AlegreyaSans-ThinItalic.otf [u'Alegreya Sans'] ['Thin Italic']
AlegreyaSans-Thin.otf [u'Alegreya Sans'] ['Thin']
Exo2.0-BlackItalic.otf [u'Exo 2.0'] ['Black Italic']
Exo2.0-Black.otf [u'Exo 2.0'] ['Black']
Exo2.0-BoldItalic.otf [u'Exo 2.0'] ['Bold Italic']
Exo2.0-Bold.otf [u'Exo 2.0'] ['Bold']
Exo2.0-ExtraBoldItalic.otf [u'Exo 2.0'] ['Extra Bold Italic']
Exo2.0-ExtraBold.otf [u'Exo 2.0'] ['Extra Bold']
Exo2.0-ExtraLightItalic.otf [u'Exo 2.0'] ['Extra Light Italic']
Exo2.0-ExtraLight.otf [u'Exo 2.0'] ['Extra Light']
Exo2.0-Italic.otf [u'Exo 2.0'] ['Italic']
Exo2.0-LightItalic.otf [u'Exo 2.0'] ['Light Italic']
Exo2.0-Light.otf [u'Exo 2.0'] ['Light']
Exo2.0-MediumItalic.otf [u'Exo 2.0'] ['Medium Italic']
Exo2.0-Medium.otf [u'Exo 2.0'] ['Medium']
Exo2.0-Regular.otf [u'Exo 2.0'] ['Regular']
Exo2.0-SemiBoldItalic.otf [u'Exo 2.0'] ['Semi Bold Italic']
Exo2.0-SemiBold.otf [u'Exo 2.0'] ['Semi Bold']
Exo2.0-ThinItalic.otf [u'Exo 2.0'] ['Thin Italic']
Exo2.0-Thin.otf [u'Exo 2.0'] ['Thin']




(Pdb) so=fpsys.state.viewobject

(Pdb) L=[i.style[0].split(u" ") for i in so]
(Pdb) L
[[u'Normal'], [u'Normal'], [u'Normal'], [u'Normal'], [u'Normal'], [u'Normal'], [u'Regular'], [u'Regular'], [u'Regular'], [u'outline'], [u'shadow'], [u'sketches'], [u'solid'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Black'], [u'Bold'], [u'Medium'], [u'Condensed', u'Light'], [u'Medium'], [u'Medium'], [u'Regular'], [u'Regular'], [u'Italic'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Italic'], [u'Regular'], [u'Regular'], [u'Plain'], [u'Regular'], [u'\x7f'], [u'Bold'], [u'Normal'], [u'Bold'], [u'Regular'], [u'Medium'], [u'B', u'Regular'], [u'\x7f'], [u'Regular'], [u'Bold'], [u'Regular'], [u'Normal'], [u'Regular'], [u'Bulky'], [u'Bulky', u'Slant'], [u'Skinny'], [u'Skinny', u'Slant'], [u'Amadeus', u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Normal'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'\x7f'], [u'Bold'], [u'Italic'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Bold', u'Italic'], [u'Bold'], [u'Italic'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Regular'], [u'Bold'], [u'Light'], [u'Normal'], [u'Italic'], [u'Regular'], [u'Bold', u'Italic'], [u'Bold'], [u'Italic'], [u'Regular'], [u'Black', u'Italic'], [u'Black'], [u'Bold', u'Italic'], [u'Bold'], [u'ExtraBold', u'Italic'], [u'ExtraBold'], [u'Italic'], [u'Light', u'Italic'], [u'Light'], [u'Medium', u'Italic'], [u'Medium'], [u'Regular'], [u'Black', u'Italic'], [u'Black'], [u'Bold', u'Italic'], [u'Bold'], [u'ExtraBold', u'Italic'], [u'ExtraBold'], [u'Italic'], [u'Light', u'Italic'], [u'Light'], [u'Medium', u'Italic'], [u'Medium'], [u'Regular'], [u'Thin', u'Italic'], [u'Thin'], [u'Thin', u'Italic'], [u'Thin'], [u'Black', u'Italic'], [u'Black'], [u'Bold', u'Italic'], [u'Bold'], [u'Extra', u'Bold', u'Italic'], [u'Extra', u'Bold'], [u'Extra', u'Light', u'Italic'], [u'Extra', u'Light'], [u'Italic'], [u'Light', u'Italic'], [u'Light'], [u'Medium', u'Italic'], [u'Medium'], [u'Regular'], [u'Semi', u'Bold', u'Italic'], [u'Semi', u'Bold'], [u'Thin', u'Italic'], [u'Thin']]



(Pdb) [y for x in L for y in x] #flattens L
[u'Normal', u'Normal', u'Normal', u'Normal', u'Normal', u'Normal', u'Regular', u'Regular', u'Regular', u'outline', u'shadow', u'sketches', u'solid', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Black', u'Bold', u'Medium', u'Condensed', u'Light', u'Medium', u'Medium', u'Regular', u'Regular', u'Italic', u'Regular', u'Regular', u'Regular', u'Italic', u'Regular', u'Regular', u'Plain', u'Regular', u'\x7f', u'Bold', u'Normal', u'Bold', u'Regular', u'Medium', u'B', u'Regular', u'\x7f', u'Regular', u'Bold', u'Regular', u'Normal', u'Regular', u'Bulky', u'Bulky', u'Slant', u'Skinny', u'Skinny', u'Slant', u'Amadeus', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Normal', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'\x7f', u'Bold', u'Italic', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Bold', u'Italic', u'Bold', u'Italic', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Bold', u'Light', u'Normal', u'Italic', u'Regular', u'Bold', u'Italic', u'Bold', u'Italic', u'Regular', u'Black', u'Italic', u'Black', u'Bold', u'Italic', u'Bold', u'ExtraBold', u'Italic', u'ExtraBold', u'Italic', u'Light', u'Italic', u'Light', u'Medium', u'Italic', u'Medium', u'Regular', u'Black', u'Italic', u'Black', u'Bold', u'Italic', u'Bold', u'ExtraBold', u'Italic', u'ExtraBold', u'Italic', u'Light', u'Italic', u'Light', u'Medium', u'Italic', u'Medium', u'Regular', u'Thin', u'Italic', u'Thin', u'Thin', u'Italic', u'Thin', u'Black', u'Italic', u'Black', u'Bold', u'Italic', u'Bold', u'Extra', u'Bold', u'Italic', u'Extra', u'Bold', u'Extra', u'Light', u'Italic', u'Extra', u'Light', u'Italic', u'Light', u'Italic', u'Light', u'Medium', u'Italic', u'Medium', u'Regular', u'Semi', u'Bold', u'Italic', u'Semi', u'Bold', u'Thin', u'Italic', u'Thin']

(Pdb) set([y for x in L for y in x])
set([u'sketches', u'ExtraBold', u'Black', u'Italic', u'Skinny', u'Condensed', u'Medium', u'Bold', u'Normal', u'Slant', u'Regular', u'Amadeus', u'Plain', u'B', u'Semi', u'Light', u'Thin', u'shadow', u'Bulky', u'outline', u'Extra', u'solid', u'\x7f'])


u'\x7f' is Python Escape ?! Anyway, remove it.

#Another way to flatten - fastest way:
(Pdb) import itertools
(Pdb) fl = list(itertools.chain(*L))
(Pdb) fl
[u'Normal', u'Normal', u'Normal', u'Normal', u'Normal', u'Normal', u'Regular', u'Regular', u'Regular', u'outline', u'shadow', u'sketches', u'solid', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Black', u'Bold', u'Medium', u'Condensed', u'Light', u'Medium', u'Medium', u'Regular', u'Regular', u'Italic', u'Regular', u'Regular', u'Regular', u'Italic', u'Regular', u'Regular', u'Plain', u'Regular', u'\x7f', u'Bold', u'Normal', u'Bold', u'Regular', u'Medium', u'B', u'Regular', u'\x7f', u'Regular', u'Bold', u'Regular', u'Normal', u'Regular', u'Bulky', u'Bulky', u'Slant', u'Skinny', u'Skinny', u'Slant', u'Amadeus', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Normal', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'\x7f', u'Bold', u'Italic', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Bold', u'Italic', u'Bold', u'Italic', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Regular', u'Bold', u'Light', u'Normal', u'Italic', u'Regular', u'Bold', u'Italic', u'Bold', u'Italic', u'Regular', u'Black', u'Italic', u'Black', u'Bold', u'Italic', u'Bold', u'ExtraBold', u'Italic', u'ExtraBold', u'Italic', u'Light', u'Italic', u'Light', u'Medium', u'Italic', u'Medium', u'Regular', u'Black', u'Italic', u'Black', u'Bold', u'Italic', u'Bold', u'ExtraBold', u'Italic', u'ExtraBold', u'Italic', u'Light', u'Italic', u'Light', u'Medium', u'Italic', u'Medium', u'Regular', u'Thin', u'Italic', u'Thin', u'Thin', u'Italic', u'Thin', u'Black', u'Italic', u'Black', u'Bold', u'Italic', u'Bold', u'Extra', u'Bold', u'Italic', u'Extra', u'Bold', u'Extra', u'Light', u'Italic', u'Extra', u'Light', u'Italic', u'Light', u'Italic', u'Light', u'Medium', u'Italic', u'Medium', u'Regular', u'Semi', u'Bold', u'Italic', u'Semi', u'Bold', u'Thin', u'Italic', u'Thin']
(Pdb) 



(Pdb) F=[i.family[0] for i in so]
(Pdb) F
[u'EmbossedBlack', u'EmbossedBlackWide', u'IncisedBlack', u'IncisedBlackWide', u'PlainBlack', u'PlainBlackWide', u'Rapscallion', u'Chantelli Antiqua', u'Roman SD', u'Folk', u'Folk', u'Folk', u'Folk', u'Furore', u'Giant Head OT', u'Giant Head Two OT', u'GrutchShaded', u'HVD Comic Serif Pro', u'JuneBug', u'JungleFever', u'Leander', u'Matiz', u'Ostrich Sans', u'Ostrich Sans', u'Ostrich Sans Dashed', u'Ostrich Sans', u'Ostrich Sans', u'Ostrich Sans Rounded', u'PixieFont', u'Pusab', u'UglyQua', u'UglyQua', u'Vanilla', u'Alpha Echo', u'AnuDaw', u'AnuDaw', u'Boycott', u'Brushstroke Plain', u'Chinese Rocks', '', u'Copystruct', u'Copystruct', u'FFF Tusj', u'Heavyweight', u'HVD Bodedo', u'Octin Vintage', '', u'WC ROUGHTRAD Bta', u'Amatic', u'Amatic SC', u'DJ Gross', u'Jenna Sue', u'Mathlete', u'Mathlete', u'Mathlete', u'Mathlete', u'Amadeus Regular', u'Bubblegum Sans', u'Devroye', u'Devroye Extra', u'Devroye', u'Devroye', u'FancyPants', u'Flavors', u'Hominis', u'Kingthings Wrote', u'QuigleyWiggly', u'Sail', u'Snippet', u'SouciSans', u'2Dumb', u'3Dumb', u'Fertigo Pro', '', u'Fontin', u'Fontin', u'Fontin', u'Fontin SmallCaps', u'Molot', u'Aguafina Script', u'Alex Brush', u'Aquiline', u'AquilineTwo', u'Arizonia', u'England Hand DB', u'Freebooter Script', u'Freebooter Script - Alts', u'Great Vibes', u'HenryMorganHand', u'Lovers Quarrel', u'Bergamo Std', u'Bergamo Std', u'Bergamo Std', u'Bergamo Std', u'ChanticleerRoman', u'Immortal', u'Immortal - Alternates', u'Medio', u'Quattrocento Roman', u'ShangriLaNFSmallCaps', u'ShangriLaNF', u'Sling', u'Sling', u'Sling', u'Sorts Mill Goudy', u'Sorts Mill Goudy', u'Vollkorn', u'Vollkorn', u'Vollkorn', u'Vollkorn', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans SC', u'Alegreya Sans', u'Alegreya Sans', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0', u'Exo 2.0']
(Pdb) set(F)
set(['', u'Flavors', u'Leander', u'Great Vibes', u'Alex Brush', u'UglyQua', u'Fontin SmallCaps', u'Octin Vintage', u'Bergamo Std', u'FancyPants', u'Chantelli Antiqua', u'Exo 2.0', u'PlainBlack', u'ShangriLaNF', u'JungleFever', u'Boycott', u'Heavyweight', u'Sorts Mill Goudy', u'Aguafina Script', u'Giant Head Two OT', u'Arizonia', u'Fontin', u'Matiz', u'Aquiline', u'Chinese Rocks', u'Sling', u'AnuDaw', u'Devroye', u'Vollkorn', u'Devroye Extra', u'Amatic', u'HenryMorganHand', u'Bubblegum Sans', u'WC ROUGHTRAD Bta', u'Ostrich Sans', u'Molot', u'Immortal', u'Alpha Echo', u'Roman SD', u'HVD Bodedo', u'Folk', u'ChanticleerRoman', u'Sail', u'Mathlete', u'DJ Gross', u'Amatic SC', u'England Hand DB', u'Copystruct', u'Immortal - Alternates', u'EmbossedBlack', u'Furore', u'PixieFont', u'Ostrich Sans Rounded', u'2Dumb', u'3Dumb', u'Giant Head OT', u'Vanilla', u'Freebooter Script - Alts', u'Jenna Sue', u'Brushstroke Plain', u'Pusab', u'Alegreya Sans', u'EmbossedBlackWide', u'Kingthings Wrote', u'Hominis', u'PlainBlackWide', u'Freebooter Script', u'Alegreya Sans SC', u'Medio', u'SouciSans', u'Snippet', u'Quattrocento Roman', u'IncisedBlack', u'Lovers Quarrel', u'GrutchShaded', u'JuneBug', u'AquilineTwo', u'Amadeus Regular', u'QuigleyWiggly', u'HVD Comic Serif Pro', u'IncisedBlackWide', u'Ostrich Sans Dashed', u'ShangriLaNFSmallCaps', u'Rapscallion', u'FFF Tusj', u'Fertigo Pro'])
(Pdb) 

More:
=====

(Pdb) [f.style for f in so if u"EmbossedBlack" in f.family]
[['Normal']]

(Pdb) [f.style for f in so if "Exo 2.0" in f.family]
[['Black Italic'], ['Black'], ['Bold Italic'], ['Bold'], ['Extra Bold Italic'], ['Extra Bold'], ['Extra Light Italic'], ['Extra Light'], ['Italic'], ['Light Italic'], ['Light'], ['Medium Italic'], ['Medium'], ['Regular'], ['Semi Bold Italic'], ['Semi Bold'], ['Thin Italic'], ['Thin']]
(Pdb) 


